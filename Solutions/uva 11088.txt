#include <bits/stdc++.h>
using namespace std;
int dp[(1<<15)+5];
int n, ar[20];

int solve(int mask){
	if(mask==(1<<n)-1) return 0;
	if(dp[mask]!=-1) return dp[mask];
	int ans=0;
	for(int i=0; i<n; i++){
		if((mask & (1<<i))==0){
			for(int j=i+1; j<n; j++){
				if((mask & (1<<j))==0){
					for(int k=j+1; k<n; k++){
						if((mask & (1<<k)) ==0 && (ar[i]+ar[j]+ar[k]>=20)){
							ans=max(ans,1+solve(mask|(1<<i)|(1<<j)|(1<<k)));
						}
					}
				}
			}
		}
	}
	return dp[mask]=ans;
}

int main() {
	int tcase=1;
	while(true){
		scanf("%d", &n);
		if(n==0) break;
		for(int i=0; i<n; i++){
			scanf("%d", &ar[i]);
		}
		memset(dp,-1,sizeof(dp));
		printf("Case %d: %d\n",tcase++, solve(0));
	}
	return 0;
}