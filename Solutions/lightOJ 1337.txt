#include <bits/stdc++.h>
using namespace std;
#define MAX 505
char grid[MAX][MAX];
int ans[MAX][MAX];
int R, C;
int dx[4]={0, 0, 1, -1};
int dy[4]={1, -1, 0, 0};

void bfs(int r, int c){
	int cnt=0;
	queue<int> q;
	vector<int> v;
	ans[r][c]=0;
	q.push(r);
	q.push(c);
	while(!q.empty()){
		int x=q.front(); q.pop();
		int y=q.front(); q.pop();
		if(grid[x][y]=='C') cnt++;
		v.push_back(x);
		v.push_back(y);
		for(int i=0; i<4; i++){
			int x1=x+dx[i];
			int y1=y+dy[i];
			if(x1>=0 && x1<R && y1>=0 && y1<C){
				if(grid[x1][y1]!='#' && ans[x1][y1]==-1){
					ans[x1][y1]=0;
					q.push(x1);
					q.push(y1);
				}
			}
		}
	}
	for(int i=0; i<v.size(); i+=2){
		ans[v[i]][v[i+1]]=cnt;
	}
}

int main() {
	int t, tc=1, q, a, b;
	scanf("%d", &t);
	while(t--){
		scanf("%d %d %d", &R, &C, &q);
		getchar();
		for(int i=0; i<R; i++){
			for(int j=0; j<C; j++){
				scanf("%c", &grid[i][j]);
			}
			getchar();
		}
		memset(ans, -1, sizeof(ans));
		for(int i=0; i<R; i++){
			for(int j=0; j<C; j++){
				if(ans[i][j]==-1 && grid[i][j!='#']) bfs(i,j);
			}
		}
		printf("Case %d:\n", tc++);
		while(q--){
			scanf("%d %d", &a, &b);
			printf("%d\n",ans[a-1][b-1]);
		}
	}
	
	return 0;
}