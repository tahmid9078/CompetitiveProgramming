#include <bits/stdc++.h>
using namespace std;
#define MAX 25
char grid[MAX][MAX];
int visited[MAX][MAX];
int R, C;
int dx[8]={0, 0, 1, -1};
int dy[8]={1, -1, 0, 0};
int bfs(int r, int c){
	int cnt=1;
	queue<int> q;
	visited[r][c]=1;
	q.push(r);
	q.push(c);
	while(!q.empty()){
		int x=q.front(); q.pop();
		int y=q.front(); q.pop();
		if(grid[x][y]=='.') cnt++;
		for(int i=0; i<4; i++){
			int x1=x+dx[i];
			int y1=y+dy[i];
			if((x1>=0 && x1<R && y1>=0 && y1<C) && grid[x1][y1]!='#'){
				if(!visited[x1][y1]){
					visited[x1][y1]=1;
					q.push(x1);
					q.push(y1);
				}
			}
		}
	}
	return cnt;
}
int main(){
	int t, tc=1, s,s1;
	scanf("%d", &t);
	while(t--){
		
		memset(visited,0,sizeof(visited));
		scanf("%d %d", &C, &R);
		
		for(int i=0; i<R; i++){
			scanf("%s", grid[i]);
		}
		for(int i=0; i<R; i++){
			for(int j=0; j<C; j++){
				if(grid[i][j]=='@'){
					s=i; s1=j; break;
				}
			}
		}
		printf("Case %d: %d\n", tc++, bfs(s,s1));
	}
	return 0;
}