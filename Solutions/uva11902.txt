#include <bits/stdc++.h>
using namespace std;

#define infinity 2147483647

vector<int> graph[110];
int n, skip;
int visited[110];
int visitedwos[110];
bool ans[110][110];

void dfswos(int s){
	visitedwos[s]=1;
	for(int i=0; i<graph[s].size(); i++){
		int v=graph[s][i];
		if(visitedwos[v]==0){
			dfswos(v);
		}
	}
}
void dfsws(int s){
	visited[s]=1;
	for(int i=0; i<graph[s].size(); i++){
		int v=graph[s][i];
		if(visited[v]==0 && v!=skip){
			dfsws(v);
		}
	}
}

int main() {
	int t, x, a, b, tcase=1;
	scanf("%d", &t);
	while(t--){
		scanf("%d", &n);
		for(int i=0; i<n; i++){
			for(int j=0; j<n; j++){
				scanf("%d", &x);
				if(x) graph[i].push_back(j);
			}
		}
		dfswos(0);
		memset(ans, false, sizeof(ans));
		for(int i=0; i<n; i++){
			if(visitedwos[i]==1){
				ans[0][i]=true;
			}
		}
		for(int i=1; i<n ; i++){
			memset(visited, 0 , sizeof(visited));
			skip=i;
			dfsws(0);
			for(int j=0; j<n; j++){
				if(visited[j]==0 && visitedwos[j]==1){
					ans[i][j]=true;
				}
			}
		}
		
		printf("Case %d:\n+",tcase++);
		for(int i=1; i<2*n; i++){
			printf("-");
		}
		printf("+\n");
		for(int i=0; i<n; i++){
			printf("|");
			for(int j=0; j<n; j++){
				if(ans[i][j])printf("Y|");
				else printf("N|");
			}
			printf("\n+");
			for(int k=1; k<2*n; k++){
				printf("-");
			}
			printf("+\n");
		}
		
		
		memset(visitedwos, 0 , sizeof(visitedwos));
		memset(ans, 0 , sizeof(ans));
		for(int i=0; i<n; i++){
			graph[i].clear();
		}
	}
	return 0;
}