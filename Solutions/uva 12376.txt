#include <bits/stdc++.h>
using namespace std;
#define Max 105

vector<int> graph[Max];
int n, e;
int visited[Max];
int dist[Max];
int ansn, total;
void init(){
	for(int i=0; i<n; i++){
		graph[i].clear();
		visited[i]=0;
	}
	ansn=0;
	total=0;
}

bool bfs(int src){
	bool flag=false;
	int maxval=-10;
	int idx=0;
	dist[src]=0;
	visited[src]=1;
	queue<int> q;
	q.push(src);
	while(!q.empty()){
		int u=q.front(); q.pop();
		flag=false;
		maxval=-10;
	    idx=0;
		for(int i=0; i<graph[u].size(); i++){
			flag=true;
			int v=graph[u][i];
			int p=max(maxval,dist[v]);
			if(p>maxval){
				idx=v;
				maxval=p;
			}
			//	visited[v]=1;
		}
		if(flag){
				q.push(idx);
				total=total+maxval;
				ansn=idx;
		}
	}
	return true;
}
int main() {
	int t, tc=1,a,b;
	scanf("%d", &t);
	while(t--){
		
		init();
		scanf("%d %d", &n, &e);
		
		for(int i=0; i<n; i++){
			scanf("%d", &dist[i]);
		}
		for(int i=0; i<e; i++){
			scanf("%d %d", &a, &b);
			graph[a].push_back(b);
		}
		bfs(0);
		printf("Case %d: %d %d\n", tc++, total, ansn);
	}
	return 0;
}